#!/usr/bin/env python3

import os
import subprocess
import sys
import platform
import tarfile

def install_gitleaks():
    print("Gitleaks not found. Installing gitleaks...")
    
    os_type = platform.system()
    try:
        if os_type == "Linux":
            subprocess.run(['curl', '-sSfL', 'https://github.com/gitleaks/gitleaks/releases/download/v8.16.4/gitleaks_8.16.4_linux_x64.tar.gz', '-o', 'gitleaks.tar.gz'], check=True)
            subprocess.run(['tar', '-xzf', 'gitleaks.tar.gz', '--strip-components=1', 'gitleaks'], check=True)
            os.environ["PATH"] += os.pathsep + os.getcwd()
        elif os_type == "Darwin":
            subprocess.run(['curl', '-sSfL', 'https://github.com/gitleaks/gitleaks/releases/download/v8.16.4/gitleaks_8.16.4_darwin_arm64.tar.gz', '-o', 'gitleaks.tar.gz'], check=True)
            subprocess.run(['tar', '-xzf', 'gitleaks.tar.gz', '--strip-components=1', 'gitleaks'], check=True)
            os.environ["PATH"] += os.pathsep + os.getcwd()
        else:
            print("Couldn't install gitleaks. The operating system is not supported.")
            sys.exit(1)
    except Exception as e:
        print(f"Error installing gitleaks: {e}")
        sys.exit(1)

def check_gitleaks_installed():
    try:
        subprocess.run(['gitleaks', 'version'], check=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    except FileNotFoundError:
        install_gitleaks()

def check_gitleaks_enabled():
    try:
        result = subprocess.run(['git', 'config', '--bool', 'hooks.gitleaks-enable'], stdout=subprocess.PIPE)
        return result.stdout.strip().decode() == "true"
    except Exception as e:
        print(f"Error checking if gitleaks is enabled: {e}")
        return False

def run_gitleaks():
    try:
        result = subprocess.run(['gitleaks', '--path=.', '--no-git'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        if result.returncode != 0:
            print("Found secrets in the code. Commit rejected.")
            print(result.stdout.decode())
            sys.exit(1)
    except Exception as e:
        print(f"Error running gitleaks: {e}")
        sys.exit(1)

def main():
    check_gitleaks_installed()
    if check_gitleaks_enabled():
        run_gitleaks()

if __name__ == '__main__':
    main()
